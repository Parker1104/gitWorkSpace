package com.hzdongcheng.softwareplatform.intelligentstorage.dal.dao.table.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TakeOutRecordEntityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    public TakeOutRecordEntityExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTerminalidIsNull() {
            addCriterion("terminalID is null");
            return (Criteria) this;
        }

        public Criteria andTerminalidIsNotNull() {
            addCriterion("terminalID is not null");
            return (Criteria) this;
        }

        public Criteria andTerminalidEqualTo(String value) {
            addCriterion("terminalID =", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidNotEqualTo(String value) {
            addCriterion("terminalID <>", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidGreaterThan(String value) {
            addCriterion("terminalID >", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidGreaterThanOrEqualTo(String value) {
            addCriterion("terminalID >=", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidLessThan(String value) {
            addCriterion("terminalID <", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidLessThanOrEqualTo(String value) {
            addCriterion("terminalID <=", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidLike(String value) {
            addCriterion("terminalID like", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidNotLike(String value) {
            addCriterion("terminalID not like", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidIn(List<String> values) {
            addCriterion("terminalID in", values, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidNotIn(List<String> values) {
            addCriterion("terminalID not in", values, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidBetween(String value1, String value2) {
            addCriterion("terminalID between", value1, value2, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidNotBetween(String value1, String value2) {
            addCriterion("terminalID not between", value1, value2, "terminalid");
            return (Criteria) this;
        }

        public Criteria andBoxidIsNull() {
            addCriterion("boxID is null");
            return (Criteria) this;
        }

        public Criteria andBoxidIsNotNull() {
            addCriterion("boxID is not null");
            return (Criteria) this;
        }

        public Criteria andBoxidEqualTo(Integer value) {
            addCriterion("boxID =", value, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidNotEqualTo(Integer value) {
            addCriterion("boxID <>", value, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidGreaterThan(Integer value) {
            addCriterion("boxID >", value, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidGreaterThanOrEqualTo(Integer value) {
            addCriterion("boxID >=", value, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidLessThan(Integer value) {
            addCriterion("boxID <", value, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidLessThanOrEqualTo(Integer value) {
            addCriterion("boxID <=", value, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidIn(List<Integer> values) {
            addCriterion("boxID in", values, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidNotIn(List<Integer> values) {
            addCriterion("boxID not in", values, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidBetween(Integer value1, Integer value2) {
            addCriterion("boxID between", value1, value2, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidNotBetween(Integer value1, Integer value2) {
            addCriterion("boxID not between", value1, value2, "boxid");
            return (Criteria) this;
        }

        public Criteria andUsercardidIsNull() {
            addCriterion("userCardID is null");
            return (Criteria) this;
        }

        public Criteria andUsercardidIsNotNull() {
            addCriterion("userCardID is not null");
            return (Criteria) this;
        }

        public Criteria andUsercardidEqualTo(String value) {
            addCriterion("userCardID =", value, "usercardid");
            return (Criteria) this;
        }

        public Criteria andUsercardidNotEqualTo(String value) {
            addCriterion("userCardID <>", value, "usercardid");
            return (Criteria) this;
        }

        public Criteria andUsercardidGreaterThan(String value) {
            addCriterion("userCardID >", value, "usercardid");
            return (Criteria) this;
        }

        public Criteria andUsercardidGreaterThanOrEqualTo(String value) {
            addCriterion("userCardID >=", value, "usercardid");
            return (Criteria) this;
        }

        public Criteria andUsercardidLessThan(String value) {
            addCriterion("userCardID <", value, "usercardid");
            return (Criteria) this;
        }

        public Criteria andUsercardidLessThanOrEqualTo(String value) {
            addCriterion("userCardID <=", value, "usercardid");
            return (Criteria) this;
        }

        public Criteria andUsercardidLike(String value) {
            addCriterion("userCardID like", value, "usercardid");
            return (Criteria) this;
        }

        public Criteria andUsercardidNotLike(String value) {
            addCriterion("userCardID not like", value, "usercardid");
            return (Criteria) this;
        }

        public Criteria andUsercardidIn(List<String> values) {
            addCriterion("userCardID in", values, "usercardid");
            return (Criteria) this;
        }

        public Criteria andUsercardidNotIn(List<String> values) {
            addCriterion("userCardID not in", values, "usercardid");
            return (Criteria) this;
        }

        public Criteria andUsercardidBetween(String value1, String value2) {
            addCriterion("userCardID between", value1, value2, "usercardid");
            return (Criteria) this;
        }

        public Criteria andUsercardidNotBetween(String value1, String value2) {
            addCriterion("userCardID not between", value1, value2, "usercardid");
            return (Criteria) this;
        }

        public Criteria andStoreintimeIsNull() {
            addCriterion("storeInTime is null");
            return (Criteria) this;
        }

        public Criteria andStoreintimeIsNotNull() {
            addCriterion("storeInTime is not null");
            return (Criteria) this;
        }

        public Criteria andStoreintimeEqualTo(Date value) {
            addCriterion("storeInTime =", value, "storeintime");
            return (Criteria) this;
        }

        public Criteria andStoreintimeNotEqualTo(Date value) {
            addCriterion("storeInTime <>", value, "storeintime");
            return (Criteria) this;
        }

        public Criteria andStoreintimeGreaterThan(Date value) {
            addCriterion("storeInTime >", value, "storeintime");
            return (Criteria) this;
        }

        public Criteria andStoreintimeGreaterThanOrEqualTo(Date value) {
            addCriterion("storeInTime >=", value, "storeintime");
            return (Criteria) this;
        }

        public Criteria andStoreintimeLessThan(Date value) {
            addCriterion("storeInTime <", value, "storeintime");
            return (Criteria) this;
        }

        public Criteria andStoreintimeLessThanOrEqualTo(Date value) {
            addCriterion("storeInTime <=", value, "storeintime");
            return (Criteria) this;
        }

        public Criteria andStoreintimeIn(List<Date> values) {
            addCriterion("storeInTime in", values, "storeintime");
            return (Criteria) this;
        }

        public Criteria andStoreintimeNotIn(List<Date> values) {
            addCriterion("storeInTime not in", values, "storeintime");
            return (Criteria) this;
        }

        public Criteria andStoreintimeBetween(Date value1, Date value2) {
            addCriterion("storeInTime between", value1, value2, "storeintime");
            return (Criteria) this;
        }

        public Criteria andStoreintimeNotBetween(Date value1, Date value2) {
            addCriterion("storeInTime not between", value1, value2, "storeintime");
            return (Criteria) this;
        }

        public Criteria andTaketimeIsNull() {
            addCriterion("takeTime is null");
            return (Criteria) this;
        }

        public Criteria andTaketimeIsNotNull() {
            addCriterion("takeTime is not null");
            return (Criteria) this;
        }

        public Criteria andTaketimeEqualTo(Date value) {
            addCriterion("takeTime =", value, "taketime");
            return (Criteria) this;
        }

        public Criteria andTaketimeNotEqualTo(Date value) {
            addCriterion("takeTime <>", value, "taketime");
            return (Criteria) this;
        }

        public Criteria andTaketimeGreaterThan(Date value) {
            addCriterion("takeTime >", value, "taketime");
            return (Criteria) this;
        }

        public Criteria andTaketimeGreaterThanOrEqualTo(Date value) {
            addCriterion("takeTime >=", value, "taketime");
            return (Criteria) this;
        }

        public Criteria andTaketimeLessThan(Date value) {
            addCriterion("takeTime <", value, "taketime");
            return (Criteria) this;
        }

        public Criteria andTaketimeLessThanOrEqualTo(Date value) {
            addCriterion("takeTime <=", value, "taketime");
            return (Criteria) this;
        }

        public Criteria andTaketimeIn(List<Date> values) {
            addCriterion("takeTime in", values, "taketime");
            return (Criteria) this;
        }

        public Criteria andTaketimeNotIn(List<Date> values) {
            addCriterion("takeTime not in", values, "taketime");
            return (Criteria) this;
        }

        public Criteria andTaketimeBetween(Date value1, Date value2) {
            addCriterion("takeTime between", value1, value2, "taketime");
            return (Criteria) this;
        }

        public Criteria andTaketimeNotBetween(Date value1, Date value2) {
            addCriterion("takeTime not between", value1, value2, "taketime");
            return (Criteria) this;
        }

        public Criteria andMoneyIsNull() {
            addCriterion("money is null");
            return (Criteria) this;
        }

        public Criteria andMoneyIsNotNull() {
            addCriterion("money is not null");
            return (Criteria) this;
        }

        public Criteria andMoneyEqualTo(Float value) {
            addCriterion("money =", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotEqualTo(Float value) {
            addCriterion("money <>", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyGreaterThan(Float value) {
            addCriterion("money >", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyGreaterThanOrEqualTo(Float value) {
            addCriterion("money >=", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyLessThan(Float value) {
            addCriterion("money <", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyLessThanOrEqualTo(Float value) {
            addCriterion("money <=", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyIn(List<Float> values) {
            addCriterion("money in", values, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotIn(List<Float> values) {
            addCriterion("money not in", values, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyBetween(Float value1, Float value2) {
            addCriterion("money between", value1, value2, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotBetween(Float value1, Float value2) {
            addCriterion("money not between", value1, value2, "money");
            return (Criteria) this;
        }

        public Criteria andRealmoneyIsNull() {
            addCriterion("realMoney is null");
            return (Criteria) this;
        }

        public Criteria andRealmoneyIsNotNull() {
            addCriterion("realMoney is not null");
            return (Criteria) this;
        }

        public Criteria andRealmoneyEqualTo(Float value) {
            addCriterion("realMoney =", value, "realmoney");
            return (Criteria) this;
        }

        public Criteria andRealmoneyNotEqualTo(Float value) {
            addCriterion("realMoney <>", value, "realmoney");
            return (Criteria) this;
        }

        public Criteria andRealmoneyGreaterThan(Float value) {
            addCriterion("realMoney >", value, "realmoney");
            return (Criteria) this;
        }

        public Criteria andRealmoneyGreaterThanOrEqualTo(Float value) {
            addCriterion("realMoney >=", value, "realmoney");
            return (Criteria) this;
        }

        public Criteria andRealmoneyLessThan(Float value) {
            addCriterion("realMoney <", value, "realmoney");
            return (Criteria) this;
        }

        public Criteria andRealmoneyLessThanOrEqualTo(Float value) {
            addCriterion("realMoney <=", value, "realmoney");
            return (Criteria) this;
        }

        public Criteria andRealmoneyIn(List<Float> values) {
            addCriterion("realMoney in", values, "realmoney");
            return (Criteria) this;
        }

        public Criteria andRealmoneyNotIn(List<Float> values) {
            addCriterion("realMoney not in", values, "realmoney");
            return (Criteria) this;
        }

        public Criteria andRealmoneyBetween(Float value1, Float value2) {
            addCriterion("realMoney between", value1, value2, "realmoney");
            return (Criteria) this;
        }

        public Criteria andRealmoneyNotBetween(Float value1, Float value2) {
            addCriterion("realMoney not between", value1, value2, "realmoney");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("`type` is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("`type` is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("`type` =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("`type` <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("`type` >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("`type` >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("`type` <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("`type` <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("`type` in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("`type` not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("`type` between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("`type` not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andMemoIsNull() {
            addCriterion("memo is null");
            return (Criteria) this;
        }

        public Criteria andMemoIsNotNull() {
            addCriterion("memo is not null");
            return (Criteria) this;
        }

        public Criteria andMemoEqualTo(String value) {
            addCriterion("memo =", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotEqualTo(String value) {
            addCriterion("memo <>", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoGreaterThan(String value) {
            addCriterion("memo >", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoGreaterThanOrEqualTo(String value) {
            addCriterion("memo >=", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLessThan(String value) {
            addCriterion("memo <", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLessThanOrEqualTo(String value) {
            addCriterion("memo <=", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLike(String value) {
            addCriterion("memo like", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotLike(String value) {
            addCriterion("memo not like", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoIn(List<String> values) {
            addCriterion("memo in", values, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotIn(List<String> values) {
            addCriterion("memo not in", values, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoBetween(String value1, String value2) {
            addCriterion("memo between", value1, value2, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotBetween(String value1, String value2) {
            addCriterion("memo not between", value1, value2, "memo");
            return (Criteria) this;
        }
        // cashierno
        public Criteria andCashierNoIsNull() {
            addCriterion("cashierno is null");
            return (Criteria) this;
        }

        public Criteria andCashierNoIsNotNull() {
            addCriterion("cashierno is not null");
            return (Criteria) this;
        }

        public Criteria andCashierNoEqualTo(String value) {
            addCriterion("cashierno =", value, "cashierno");
            return (Criteria) this;
        }

        public Criteria andCashierNoNotEqualTo(String value) {
            addCriterion("cashierno <>", value, "cashierno");
            return (Criteria) this;
        }

        public Criteria andCashierNoGreaterThan(String value) {
            addCriterion("cashierno >", value, "cashierno");
            return (Criteria) this;
        }

        public Criteria andCashierNoGreaterThanOrEqualTo(String value) {
            addCriterion("cashierno >=", value, "cashierno");
            return (Criteria) this;
        }

        public Criteria andCashierNoLessThan(String value) {
            addCriterion("cashierno <", value, "cashierno");
            return (Criteria) this;
        }

        public Criteria andCashierNoLessThanOrEqualTo(String value) {
            addCriterion("cashierno <=", value, "cashierno");
            return (Criteria) this;
        }

        public Criteria andCashierNoLike(String value) {
            addCriterion("cashierno like", value, "cashierno");
            return (Criteria) this;
        }

        public Criteria andCashierNoNotLike(String value) {
            addCriterion("cashierno not like", value, "cashierno");
            return (Criteria) this;
        }

        public Criteria andCashierNoIn(List<String> values) {
            addCriterion("cashierno in", values, "cashierno");
            return (Criteria) this;
        }

        public Criteria andCashierNoNotIn(List<String> values) {
            addCriterion("cashierno not in", values, "cashierno");
            return (Criteria) this;
        }

        public Criteria andCashierNoBetween(String value1, String value2) {
            addCriterion("cashierno between", value1, value2, "cashierno");
            return (Criteria) this;
        }

        public Criteria andCashierNoNotBetween(String value1, String value2) {
            addCriterion("cashierno not between", value1, value2, "cashierno");
            return (Criteria) this;
        }
        
        // makeopcode
        public Criteria andMakeOpCodeIsNull() {
            addCriterion("makeopcode is null");
            return (Criteria) this;
        }

        public Criteria andMakeOpCodeIsNotNull() {
            addCriterion("makeopcode is not null");
            return (Criteria) this;
        }

        public Criteria andMakeOpCodeEqualTo(String value) {
            addCriterion("makeopcode =", value, "makeopcode");
            return (Criteria) this;
        }

        public Criteria andMakeOpCodeNotEqualTo(String value) {
            addCriterion("makeopcode <>", value, "makeopcode");
            return (Criteria) this;
        }

        public Criteria andMakeOpCodeGreaterThan(String value) {
            addCriterion("makeopcode >", value, "makeopcode");
            return (Criteria) this;
        }

        public Criteria andMakeOpCodeGreaterThanOrEqualTo(String value) {
            addCriterion("makeopcode >=", value, "makeopcode");
            return (Criteria) this;
        }

        public Criteria andMakeOpCodeLessThan(String value) {
            addCriterion("makeopcode <", value, "makeopcode");
            return (Criteria) this;
        }

        public Criteria andMakeOpCodeLessThanOrEqualTo(String value) {
            addCriterion("makeopcode <=", value, "makeopcode");
            return (Criteria) this;
        }

        public Criteria andMakeOpCodeLike(String value) {
            addCriterion("makeopcode like", value, "makeopcode");
            return (Criteria) this;
        }

        public Criteria andMakeOpCodeNotLike(String value) {
            addCriterion("makeopcode not like", value, "makeopcode");
            return (Criteria) this;
        }

        public Criteria andMakeOpCodeIn(List<String> values) {
            addCriterion("makeopcode in", values, "makeopcode");
            return (Criteria) this;
        }

        public Criteria andMakeOpCodeNotIn(List<String> values) {
            addCriterion("makeopcode not in", values, "makeopcode");
            return (Criteria) this;
        }

        public Criteria andMakeOpCodeBetween(String value1, String value2) {
            addCriterion("makeopcode between", value1, value2, "makeopcode");
            return (Criteria) this;
        }

        public Criteria andMakeOpCodeNotBetween(String value1, String value2) {
            addCriterion("makeopcode not between", value1, value2, "makeopcode");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table takeoutrecord
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table takeoutrecord
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}