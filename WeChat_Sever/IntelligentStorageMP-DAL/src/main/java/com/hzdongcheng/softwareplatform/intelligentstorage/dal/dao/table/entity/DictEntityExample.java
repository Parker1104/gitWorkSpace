package com.hzdongcheng.softwareplatform.intelligentstorage.dal.dao.table.entity;

import java.util.ArrayList;
import java.util.List;

public class DictEntityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dict
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dict
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dict
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict
     *
     * @mbg.generated
     */
    public DictEntityExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dict
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDicttypecodeIsNull() {
            addCriterion("dictTypeCode is null");
            return (Criteria) this;
        }

        public Criteria andDicttypecodeIsNotNull() {
            addCriterion("dictTypeCode is not null");
            return (Criteria) this;
        }

        public Criteria andDicttypecodeEqualTo(String value) {
            addCriterion("dictTypeCode =", value, "dicttypecode");
            return (Criteria) this;
        }

        public Criteria andDicttypecodeNotEqualTo(String value) {
            addCriterion("dictTypeCode <>", value, "dicttypecode");
            return (Criteria) this;
        }

        public Criteria andDicttypecodeGreaterThan(String value) {
            addCriterion("dictTypeCode >", value, "dicttypecode");
            return (Criteria) this;
        }

        public Criteria andDicttypecodeGreaterThanOrEqualTo(String value) {
            addCriterion("dictTypeCode >=", value, "dicttypecode");
            return (Criteria) this;
        }

        public Criteria andDicttypecodeLessThan(String value) {
            addCriterion("dictTypeCode <", value, "dicttypecode");
            return (Criteria) this;
        }

        public Criteria andDicttypecodeLessThanOrEqualTo(String value) {
            addCriterion("dictTypeCode <=", value, "dicttypecode");
            return (Criteria) this;
        }

        public Criteria andDicttypecodeLike(String value) {
            addCriterion("dictTypeCode like", value, "dicttypecode");
            return (Criteria) this;
        }

        public Criteria andDicttypecodeNotLike(String value) {
            addCriterion("dictTypeCode not like", value, "dicttypecode");
            return (Criteria) this;
        }

        public Criteria andDicttypecodeIn(List<String> values) {
            addCriterion("dictTypeCode in", values, "dicttypecode");
            return (Criteria) this;
        }

        public Criteria andDicttypecodeNotIn(List<String> values) {
            addCriterion("dictTypeCode not in", values, "dicttypecode");
            return (Criteria) this;
        }

        public Criteria andDicttypecodeBetween(String value1, String value2) {
            addCriterion("dictTypeCode between", value1, value2, "dicttypecode");
            return (Criteria) this;
        }

        public Criteria andDicttypecodeNotBetween(String value1, String value2) {
            addCriterion("dictTypeCode not between", value1, value2, "dicttypecode");
            return (Criteria) this;
        }

        public Criteria andDictcodeIsNull() {
            addCriterion("dictCode is null");
            return (Criteria) this;
        }

        public Criteria andDictcodeIsNotNull() {
            addCriterion("dictCode is not null");
            return (Criteria) this;
        }

        public Criteria andDictcodeEqualTo(Integer value) {
            addCriterion("dictCode =", value, "dictcode");
            return (Criteria) this;
        }

        public Criteria andDictcodeNotEqualTo(Integer value) {
            addCriterion("dictCode <>", value, "dictcode");
            return (Criteria) this;
        }

        public Criteria andDictcodeGreaterThan(Integer value) {
            addCriterion("dictCode >", value, "dictcode");
            return (Criteria) this;
        }

        public Criteria andDictcodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("dictCode >=", value, "dictcode");
            return (Criteria) this;
        }

        public Criteria andDictcodeLessThan(Integer value) {
            addCriterion("dictCode <", value, "dictcode");
            return (Criteria) this;
        }

        public Criteria andDictcodeLessThanOrEqualTo(Integer value) {
            addCriterion("dictCode <=", value, "dictcode");
            return (Criteria) this;
        }

        public Criteria andDictcodeIn(List<Integer> values) {
            addCriterion("dictCode in", values, "dictcode");
            return (Criteria) this;
        }

        public Criteria andDictcodeNotIn(List<Integer> values) {
            addCriterion("dictCode not in", values, "dictcode");
            return (Criteria) this;
        }

        public Criteria andDictcodeBetween(Integer value1, Integer value2) {
            addCriterion("dictCode between", value1, value2, "dictcode");
            return (Criteria) this;
        }

        public Criteria andDictcodeNotBetween(Integer value1, Integer value2) {
            addCriterion("dictCode not between", value1, value2, "dictcode");
            return (Criteria) this;
        }

        public Criteria andDicttypenameIsNull() {
            addCriterion("dictTypeName is null");
            return (Criteria) this;
        }

        public Criteria andDicttypenameIsNotNull() {
            addCriterion("dictTypeName is not null");
            return (Criteria) this;
        }

        public Criteria andDicttypenameEqualTo(String value) {
            addCriterion("dictTypeName =", value, "dicttypename");
            return (Criteria) this;
        }

        public Criteria andDicttypenameNotEqualTo(String value) {
            addCriterion("dictTypeName <>", value, "dicttypename");
            return (Criteria) this;
        }

        public Criteria andDicttypenameGreaterThan(String value) {
            addCriterion("dictTypeName >", value, "dicttypename");
            return (Criteria) this;
        }

        public Criteria andDicttypenameGreaterThanOrEqualTo(String value) {
            addCriterion("dictTypeName >=", value, "dicttypename");
            return (Criteria) this;
        }

        public Criteria andDicttypenameLessThan(String value) {
            addCriterion("dictTypeName <", value, "dicttypename");
            return (Criteria) this;
        }

        public Criteria andDicttypenameLessThanOrEqualTo(String value) {
            addCriterion("dictTypeName <=", value, "dicttypename");
            return (Criteria) this;
        }

        public Criteria andDicttypenameLike(String value) {
            addCriterion("dictTypeName like", value, "dicttypename");
            return (Criteria) this;
        }

        public Criteria andDicttypenameNotLike(String value) {
            addCriterion("dictTypeName not like", value, "dicttypename");
            return (Criteria) this;
        }

        public Criteria andDicttypenameIn(List<String> values) {
            addCriterion("dictTypeName in", values, "dicttypename");
            return (Criteria) this;
        }

        public Criteria andDicttypenameNotIn(List<String> values) {
            addCriterion("dictTypeName not in", values, "dicttypename");
            return (Criteria) this;
        }

        public Criteria andDicttypenameBetween(String value1, String value2) {
            addCriterion("dictTypeName between", value1, value2, "dicttypename");
            return (Criteria) this;
        }

        public Criteria andDicttypenameNotBetween(String value1, String value2) {
            addCriterion("dictTypeName not between", value1, value2, "dicttypename");
            return (Criteria) this;
        }

        public Criteria andDictnameIsNull() {
            addCriterion("dictName is null");
            return (Criteria) this;
        }

        public Criteria andDictnameIsNotNull() {
            addCriterion("dictName is not null");
            return (Criteria) this;
        }

        public Criteria andDictnameEqualTo(String value) {
            addCriterion("dictName =", value, "dictname");
            return (Criteria) this;
        }

        public Criteria andDictnameNotEqualTo(String value) {
            addCriterion("dictName <>", value, "dictname");
            return (Criteria) this;
        }

        public Criteria andDictnameGreaterThan(String value) {
            addCriterion("dictName >", value, "dictname");
            return (Criteria) this;
        }

        public Criteria andDictnameGreaterThanOrEqualTo(String value) {
            addCriterion("dictName >=", value, "dictname");
            return (Criteria) this;
        }

        public Criteria andDictnameLessThan(String value) {
            addCriterion("dictName <", value, "dictname");
            return (Criteria) this;
        }

        public Criteria andDictnameLessThanOrEqualTo(String value) {
            addCriterion("dictName <=", value, "dictname");
            return (Criteria) this;
        }

        public Criteria andDictnameLike(String value) {
            addCriterion("dictName like", value, "dictname");
            return (Criteria) this;
        }

        public Criteria andDictnameNotLike(String value) {
            addCriterion("dictName not like", value, "dictname");
            return (Criteria) this;
        }

        public Criteria andDictnameIn(List<String> values) {
            addCriterion("dictName in", values, "dictname");
            return (Criteria) this;
        }

        public Criteria andDictnameNotIn(List<String> values) {
            addCriterion("dictName not in", values, "dictname");
            return (Criteria) this;
        }

        public Criteria andDictnameBetween(String value1, String value2) {
            addCriterion("dictName between", value1, value2, "dictname");
            return (Criteria) this;
        }

        public Criteria andDictnameNotBetween(String value1, String value2) {
            addCriterion("dictName not between", value1, value2, "dictname");
            return (Criteria) this;
        }

        public Criteria andMemoIsNull() {
            addCriterion("memo is null");
            return (Criteria) this;
        }

        public Criteria andMemoIsNotNull() {
            addCriterion("memo is not null");
            return (Criteria) this;
        }

        public Criteria andMemoEqualTo(String value) {
            addCriterion("memo =", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotEqualTo(String value) {
            addCriterion("memo <>", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoGreaterThan(String value) {
            addCriterion("memo >", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoGreaterThanOrEqualTo(String value) {
            addCriterion("memo >=", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLessThan(String value) {
            addCriterion("memo <", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLessThanOrEqualTo(String value) {
            addCriterion("memo <=", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLike(String value) {
            addCriterion("memo like", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotLike(String value) {
            addCriterion("memo not like", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoIn(List<String> values) {
            addCriterion("memo in", values, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotIn(List<String> values) {
            addCriterion("memo not in", values, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoBetween(String value1, String value2) {
            addCriterion("memo between", value1, value2, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotBetween(String value1, String value2) {
            addCriterion("memo not between", value1, value2, "memo");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dict
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dict
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}