package com.hzdongcheng.softwareplatform.intelligentstorage.dal.dao.table.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class MessageNoticeRecordEntityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    public MessageNoticeRecordEntityExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andWateridIsNull() {
            addCriterion("WaterID is null");
            return (Criteria) this;
        }

        public Criteria andWateridIsNotNull() {
            addCriterion("WaterID is not null");
            return (Criteria) this;
        }

        public Criteria andWateridEqualTo(Integer value) {
            addCriterion("WaterID =", value, "waterid");
            return (Criteria) this;
        }

        public Criteria andWateridNotEqualTo(Integer value) {
            addCriterion("WaterID <>", value, "waterid");
            return (Criteria) this;
        }

        public Criteria andWateridGreaterThan(Integer value) {
            addCriterion("WaterID >", value, "waterid");
            return (Criteria) this;
        }

        public Criteria andWateridGreaterThanOrEqualTo(Integer value) {
            addCriterion("WaterID >=", value, "waterid");
            return (Criteria) this;
        }

        public Criteria andWateridLessThan(Integer value) {
            addCriterion("WaterID <", value, "waterid");
            return (Criteria) this;
        }

        public Criteria andWateridLessThanOrEqualTo(Integer value) {
            addCriterion("WaterID <=", value, "waterid");
            return (Criteria) this;
        }

        public Criteria andWateridIn(List<Integer> values) {
            addCriterion("WaterID in", values, "waterid");
            return (Criteria) this;
        }

        public Criteria andWateridNotIn(List<Integer> values) {
            addCriterion("WaterID not in", values, "waterid");
            return (Criteria) this;
        }

        public Criteria andWateridBetween(Integer value1, Integer value2) {
            addCriterion("WaterID between", value1, value2, "waterid");
            return (Criteria) this;
        }

        public Criteria andWateridNotBetween(Integer value1, Integer value2) {
            addCriterion("WaterID not between", value1, value2, "waterid");
            return (Criteria) this;
        }

        public Criteria andTerminalidIsNull() {
            addCriterion("TerminalID is null");
            return (Criteria) this;
        }

        public Criteria andTerminalidIsNotNull() {
            addCriterion("TerminalID is not null");
            return (Criteria) this;
        }

        public Criteria andTerminalidEqualTo(String value) {
            addCriterion("TerminalID =", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidNotEqualTo(String value) {
            addCriterion("TerminalID <>", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidGreaterThan(String value) {
            addCriterion("TerminalID >", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidGreaterThanOrEqualTo(String value) {
            addCriterion("TerminalID >=", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidLessThan(String value) {
            addCriterion("TerminalID <", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidLessThanOrEqualTo(String value) {
            addCriterion("TerminalID <=", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidLike(String value) {
            addCriterion("TerminalID like", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidNotLike(String value) {
            addCriterion("TerminalID not like", value, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidIn(List<String> values) {
            addCriterion("TerminalID in", values, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidNotIn(List<String> values) {
            addCriterion("TerminalID not in", values, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidBetween(String value1, String value2) {
            addCriterion("TerminalID between", value1, value2, "terminalid");
            return (Criteria) this;
        }

        public Criteria andTerminalidNotBetween(String value1, String value2) {
            addCriterion("TerminalID not between", value1, value2, "terminalid");
            return (Criteria) this;
        }

        public Criteria andCardidIsNull() {
            addCriterion("CardID is null");
            return (Criteria) this;
        }

        public Criteria andCardidIsNotNull() {
            addCriterion("CardID is not null");
            return (Criteria) this;
        }

        public Criteria andCardidEqualTo(String value) {
            addCriterion("CardID =", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidNotEqualTo(String value) {
            addCriterion("CardID <>", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidGreaterThan(String value) {
            addCriterion("CardID >", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidGreaterThanOrEqualTo(String value) {
            addCriterion("CardID >=", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidLessThan(String value) {
            addCriterion("CardID <", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidLessThanOrEqualTo(String value) {
            addCriterion("CardID <=", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidLike(String value) {
            addCriterion("CardID like", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidNotLike(String value) {
            addCriterion("CardID not like", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidIn(List<String> values) {
            addCriterion("CardID in", values, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidNotIn(List<String> values) {
            addCriterion("CardID not in", values, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidBetween(String value1, String value2) {
            addCriterion("CardID between", value1, value2, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidNotBetween(String value1, String value2) {
            addCriterion("CardID not between", value1, value2, "cardid");
            return (Criteria) this;
        }

        public Criteria andBoxidIsNull() {
            addCriterion("BoxID is null");
            return (Criteria) this;
        }

        public Criteria andBoxidIsNotNull() {
            addCriterion("BoxID is not null");
            return (Criteria) this;
        }

        public Criteria andBoxidEqualTo(Integer value) {
            addCriterion("BoxID =", value, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidNotEqualTo(Integer value) {
            addCriterion("BoxID <>", value, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidGreaterThan(Integer value) {
            addCriterion("BoxID >", value, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidGreaterThanOrEqualTo(Integer value) {
            addCriterion("BoxID >=", value, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidLessThan(Integer value) {
            addCriterion("BoxID <", value, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidLessThanOrEqualTo(Integer value) {
            addCriterion("BoxID <=", value, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidIn(List<Integer> values) {
            addCriterion("BoxID in", values, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidNotIn(List<Integer> values) {
            addCriterion("BoxID not in", values, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidBetween(Integer value1, Integer value2) {
            addCriterion("BoxID between", value1, value2, "boxid");
            return (Criteria) this;
        }

        public Criteria andBoxidNotBetween(Integer value1, Integer value2) {
            addCriterion("BoxID not between", value1, value2, "boxid");
            return (Criteria) this;
        }

        public Criteria andStoredtimeIsNull() {
            addCriterion("StoredTime is null");
            return (Criteria) this;
        }

        public Criteria andStoredtimeIsNotNull() {
            addCriterion("StoredTime is not null");
            return (Criteria) this;
        }

        public Criteria andStoredtimeEqualTo(Date value) {
            addCriterion("StoredTime =", value, "storedtime");
            return (Criteria) this;
        }

        public Criteria andStoredtimeNotEqualTo(Date value) {
            addCriterion("StoredTime <>", value, "storedtime");
            return (Criteria) this;
        }

        public Criteria andStoredtimeGreaterThan(Date value) {
            addCriterion("StoredTime >", value, "storedtime");
            return (Criteria) this;
        }

        public Criteria andStoredtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("StoredTime >=", value, "storedtime");
            return (Criteria) this;
        }

        public Criteria andStoredtimeLessThan(Date value) {
            addCriterion("StoredTime <", value, "storedtime");
            return (Criteria) this;
        }

        public Criteria andStoredtimeLessThanOrEqualTo(Date value) {
            addCriterion("StoredTime <=", value, "storedtime");
            return (Criteria) this;
        }

        public Criteria andStoredtimeIn(List<Date> values) {
            addCriterion("StoredTime in", values, "storedtime");
            return (Criteria) this;
        }

        public Criteria andStoredtimeNotIn(List<Date> values) {
            addCriterion("StoredTime not in", values, "storedtime");
            return (Criteria) this;
        }

        public Criteria andStoredtimeBetween(Date value1, Date value2) {
            addCriterion("StoredTime between", value1, value2, "storedtime");
            return (Criteria) this;
        }

        public Criteria andStoredtimeNotBetween(Date value1, Date value2) {
            addCriterion("StoredTime not between", value1, value2, "storedtime");
            return (Criteria) this;
        }

        public Criteria andStoreddateIsNull() {
            addCriterion("StoredDate is null");
            return (Criteria) this;
        }

        public Criteria andStoreddateIsNotNull() {
            addCriterion("StoredDate is not null");
            return (Criteria) this;
        }

        public Criteria andStoreddateEqualTo(Date value) {
            addCriterionForJDBCDate("StoredDate =", value, "storeddate");
            return (Criteria) this;
        }

        public Criteria andStoreddateNotEqualTo(Date value) {
            addCriterionForJDBCDate("StoredDate <>", value, "storeddate");
            return (Criteria) this;
        }

        public Criteria andStoreddateGreaterThan(Date value) {
            addCriterionForJDBCDate("StoredDate >", value, "storeddate");
            return (Criteria) this;
        }

        public Criteria andStoreddateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("StoredDate >=", value, "storeddate");
            return (Criteria) this;
        }

        public Criteria andStoreddateLessThan(Date value) {
            addCriterionForJDBCDate("StoredDate <", value, "storeddate");
            return (Criteria) this;
        }

        public Criteria andStoreddateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("StoredDate <=", value, "storeddate");
            return (Criteria) this;
        }

        public Criteria andStoreddateIn(List<Date> values) {
            addCriterionForJDBCDate("StoredDate in", values, "storeddate");
            return (Criteria) this;
        }

        public Criteria andStoreddateNotIn(List<Date> values) {
            addCriterionForJDBCDate("StoredDate not in", values, "storeddate");
            return (Criteria) this;
        }

        public Criteria andStoreddateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("StoredDate between", value1, value2, "storeddate");
            return (Criteria) this;
        }

        public Criteria andStoreddateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("StoredDate not between", value1, value2, "storeddate");
            return (Criteria) this;
        }

        public Criteria andTakeouttimeIsNull() {
            addCriterion("TakeOutTime is null");
            return (Criteria) this;
        }

        public Criteria andTakeouttimeIsNotNull() {
            addCriterion("TakeOutTime is not null");
            return (Criteria) this;
        }

        public Criteria andTakeouttimeEqualTo(Date value) {
            addCriterion("TakeOutTime =", value, "takeouttime");
            return (Criteria) this;
        }

        public Criteria andTakeouttimeNotEqualTo(Date value) {
            addCriterion("TakeOutTime <>", value, "takeouttime");
            return (Criteria) this;
        }

        public Criteria andTakeouttimeGreaterThan(Date value) {
            addCriterion("TakeOutTime >", value, "takeouttime");
            return (Criteria) this;
        }

        public Criteria andTakeouttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("TakeOutTime >=", value, "takeouttime");
            return (Criteria) this;
        }

        public Criteria andTakeouttimeLessThan(Date value) {
            addCriterion("TakeOutTime <", value, "takeouttime");
            return (Criteria) this;
        }

        public Criteria andTakeouttimeLessThanOrEqualTo(Date value) {
            addCriterion("TakeOutTime <=", value, "takeouttime");
            return (Criteria) this;
        }

        public Criteria andTakeouttimeIn(List<Date> values) {
            addCriterion("TakeOutTime in", values, "takeouttime");
            return (Criteria) this;
        }

        public Criteria andTakeouttimeNotIn(List<Date> values) {
            addCriterion("TakeOutTime not in", values, "takeouttime");
            return (Criteria) this;
        }

        public Criteria andTakeouttimeBetween(Date value1, Date value2) {
            addCriterion("TakeOutTime between", value1, value2, "takeouttime");
            return (Criteria) this;
        }

        public Criteria andTakeouttimeNotBetween(Date value1, Date value2) {
            addCriterion("TakeOutTime not between", value1, value2, "takeouttime");
            return (Criteria) this;
        }

        public Criteria andMessagetypeIsNull() {
            addCriterion("MessageType is null");
            return (Criteria) this;
        }

        public Criteria andMessagetypeIsNotNull() {
            addCriterion("MessageType is not null");
            return (Criteria) this;
        }

        public Criteria andMessagetypeEqualTo(String value) {
            addCriterion("MessageType =", value, "messagetype");
            return (Criteria) this;
        }

        public Criteria andMessagetypeNotEqualTo(String value) {
            addCriterion("MessageType <>", value, "messagetype");
            return (Criteria) this;
        }

        public Criteria andMessagetypeGreaterThan(String value) {
            addCriterion("MessageType >", value, "messagetype");
            return (Criteria) this;
        }

        public Criteria andMessagetypeGreaterThanOrEqualTo(String value) {
            addCriterion("MessageType >=", value, "messagetype");
            return (Criteria) this;
        }

        public Criteria andMessagetypeLessThan(String value) {
            addCriterion("MessageType <", value, "messagetype");
            return (Criteria) this;
        }

        public Criteria andMessagetypeLessThanOrEqualTo(String value) {
            addCriterion("MessageType <=", value, "messagetype");
            return (Criteria) this;
        }

        public Criteria andMessagetypeLike(String value) {
            addCriterion("MessageType like", value, "messagetype");
            return (Criteria) this;
        }

        public Criteria andMessagetypeNotLike(String value) {
            addCriterion("MessageType not like", value, "messagetype");
            return (Criteria) this;
        }

        public Criteria andMessagetypeIn(List<String> values) {
            addCriterion("MessageType in", values, "messagetype");
            return (Criteria) this;
        }

        public Criteria andMessagetypeNotIn(List<String> values) {
            addCriterion("MessageType not in", values, "messagetype");
            return (Criteria) this;
        }

        public Criteria andMessagetypeBetween(String value1, String value2) {
            addCriterion("MessageType between", value1, value2, "messagetype");
            return (Criteria) this;
        }

        public Criteria andMessagetypeNotBetween(String value1, String value2) {
            addCriterion("MessageType not between", value1, value2, "messagetype");
            return (Criteria) this;
        }

        public Criteria andCustomerIsNull() {
            addCriterion("Customer is null");
            return (Criteria) this;
        }

        public Criteria andCustomerIsNotNull() {
            addCriterion("Customer is not null");
            return (Criteria) this;
        }

        public Criteria andCustomerEqualTo(String value) {
            addCriterion("Customer =", value, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerNotEqualTo(String value) {
            addCriterion("Customer <>", value, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerGreaterThan(String value) {
            addCriterion("Customer >", value, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerGreaterThanOrEqualTo(String value) {
            addCriterion("Customer >=", value, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerLessThan(String value) {
            addCriterion("Customer <", value, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerLessThanOrEqualTo(String value) {
            addCriterion("Customer <=", value, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerLike(String value) {
            addCriterion("Customer like", value, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerNotLike(String value) {
            addCriterion("Customer not like", value, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerIn(List<String> values) {
            addCriterion("Customer in", values, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerNotIn(List<String> values) {
            addCriterion("Customer not in", values, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerBetween(String value1, String value2) {
            addCriterion("Customer between", value1, value2, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerNotBetween(String value1, String value2) {
            addCriterion("Customer not between", value1, value2, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomernameIsNull() {
            addCriterion("CustomerName is null");
            return (Criteria) this;
        }

        public Criteria andCustomernameIsNotNull() {
            addCriterion("CustomerName is not null");
            return (Criteria) this;
        }

        public Criteria andCustomernameEqualTo(String value) {
            addCriterion("CustomerName =", value, "customername");
            return (Criteria) this;
        }

        public Criteria andCustomernameNotEqualTo(String value) {
            addCriterion("CustomerName <>", value, "customername");
            return (Criteria) this;
        }

        public Criteria andCustomernameGreaterThan(String value) {
            addCriterion("CustomerName >", value, "customername");
            return (Criteria) this;
        }

        public Criteria andCustomernameGreaterThanOrEqualTo(String value) {
            addCriterion("CustomerName >=", value, "customername");
            return (Criteria) this;
        }

        public Criteria andCustomernameLessThan(String value) {
            addCriterion("CustomerName <", value, "customername");
            return (Criteria) this;
        }

        public Criteria andCustomernameLessThanOrEqualTo(String value) {
            addCriterion("CustomerName <=", value, "customername");
            return (Criteria) this;
        }

        public Criteria andCustomernameLike(String value) {
            addCriterion("CustomerName like", value, "customername");
            return (Criteria) this;
        }

        public Criteria andCustomernameNotLike(String value) {
            addCriterion("CustomerName not like", value, "customername");
            return (Criteria) this;
        }

        public Criteria andCustomernameIn(List<String> values) {
            addCriterion("CustomerName in", values, "customername");
            return (Criteria) this;
        }

        public Criteria andCustomernameNotIn(List<String> values) {
            addCriterion("CustomerName not in", values, "customername");
            return (Criteria) this;
        }

        public Criteria andCustomernameBetween(String value1, String value2) {
            addCriterion("CustomerName between", value1, value2, "customername");
            return (Criteria) this;
        }

        public Criteria andCustomernameNotBetween(String value1, String value2) {
            addCriterion("CustomerName not between", value1, value2, "customername");
            return (Criteria) this;
        }

        public Criteria andSendcontentIsNull() {
            addCriterion("SendContent is null");
            return (Criteria) this;
        }

        public Criteria andSendcontentIsNotNull() {
            addCriterion("SendContent is not null");
            return (Criteria) this;
        }

        public Criteria andSendcontentEqualTo(String value) {
            addCriterion("SendContent =", value, "sendcontent");
            return (Criteria) this;
        }

        public Criteria andSendcontentNotEqualTo(String value) {
            addCriterion("SendContent <>", value, "sendcontent");
            return (Criteria) this;
        }

        public Criteria andSendcontentGreaterThan(String value) {
            addCriterion("SendContent >", value, "sendcontent");
            return (Criteria) this;
        }

        public Criteria andSendcontentGreaterThanOrEqualTo(String value) {
            addCriterion("SendContent >=", value, "sendcontent");
            return (Criteria) this;
        }

        public Criteria andSendcontentLessThan(String value) {
            addCriterion("SendContent <", value, "sendcontent");
            return (Criteria) this;
        }

        public Criteria andSendcontentLessThanOrEqualTo(String value) {
            addCriterion("SendContent <=", value, "sendcontent");
            return (Criteria) this;
        }

        public Criteria andSendcontentLike(String value) {
            addCriterion("SendContent like", value, "sendcontent");
            return (Criteria) this;
        }

        public Criteria andSendcontentNotLike(String value) {
            addCriterion("SendContent not like", value, "sendcontent");
            return (Criteria) this;
        }

        public Criteria andSendcontentIn(List<String> values) {
            addCriterion("SendContent in", values, "sendcontent");
            return (Criteria) this;
        }

        public Criteria andSendcontentNotIn(List<String> values) {
            addCriterion("SendContent not in", values, "sendcontent");
            return (Criteria) this;
        }

        public Criteria andSendcontentBetween(String value1, String value2) {
            addCriterion("SendContent between", value1, value2, "sendcontent");
            return (Criteria) this;
        }

        public Criteria andSendcontentNotBetween(String value1, String value2) {
            addCriterion("SendContent not between", value1, value2, "sendcontent");
            return (Criteria) this;
        }

        public Criteria andSendstatusIsNull() {
            addCriterion("SendStatus is null");
            return (Criteria) this;
        }

        public Criteria andSendstatusIsNotNull() {
            addCriterion("SendStatus is not null");
            return (Criteria) this;
        }

        public Criteria andSendstatusEqualTo(String value) {
            addCriterion("SendStatus =", value, "sendstatus");
            return (Criteria) this;
        }

        public Criteria andSendstatusNotEqualTo(String value) {
            addCriterion("SendStatus <>", value, "sendstatus");
            return (Criteria) this;
        }

        public Criteria andSendstatusGreaterThan(String value) {
            addCriterion("SendStatus >", value, "sendstatus");
            return (Criteria) this;
        }

        public Criteria andSendstatusGreaterThanOrEqualTo(String value) {
            addCriterion("SendStatus >=", value, "sendstatus");
            return (Criteria) this;
        }

        public Criteria andSendstatusLessThan(String value) {
            addCriterion("SendStatus <", value, "sendstatus");
            return (Criteria) this;
        }

        public Criteria andSendstatusLessThanOrEqualTo(String value) {
            addCriterion("SendStatus <=", value, "sendstatus");
            return (Criteria) this;
        }

        public Criteria andSendstatusLike(String value) {
            addCriterion("SendStatus like", value, "sendstatus");
            return (Criteria) this;
        }

        public Criteria andSendstatusNotLike(String value) {
            addCriterion("SendStatus not like", value, "sendstatus");
            return (Criteria) this;
        }

        public Criteria andSendstatusIn(List<String> values) {
            addCriterion("SendStatus in", values, "sendstatus");
            return (Criteria) this;
        }

        public Criteria andSendstatusNotIn(List<String> values) {
            addCriterion("SendStatus not in", values, "sendstatus");
            return (Criteria) this;
        }

        public Criteria andSendstatusBetween(String value1, String value2) {
            addCriterion("SendStatus between", value1, value2, "sendstatus");
            return (Criteria) this;
        }

        public Criteria andSendstatusNotBetween(String value1, String value2) {
            addCriterion("SendStatus not between", value1, value2, "sendstatus");
            return (Criteria) this;
        }

        public Criteria andResendnumIsNull() {
            addCriterion("ReSendNum is null");
            return (Criteria) this;
        }

        public Criteria andResendnumIsNotNull() {
            addCriterion("ReSendNum is not null");
            return (Criteria) this;
        }

        public Criteria andResendnumEqualTo(Integer value) {
            addCriterion("ReSendNum =", value, "resendnum");
            return (Criteria) this;
        }

        public Criteria andResendnumNotEqualTo(Integer value) {
            addCriterion("ReSendNum <>", value, "resendnum");
            return (Criteria) this;
        }

        public Criteria andResendnumGreaterThan(Integer value) {
            addCriterion("ReSendNum >", value, "resendnum");
            return (Criteria) this;
        }

        public Criteria andResendnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("ReSendNum >=", value, "resendnum");
            return (Criteria) this;
        }

        public Criteria andResendnumLessThan(Integer value) {
            addCriterion("ReSendNum <", value, "resendnum");
            return (Criteria) this;
        }

        public Criteria andResendnumLessThanOrEqualTo(Integer value) {
            addCriterion("ReSendNum <=", value, "resendnum");
            return (Criteria) this;
        }

        public Criteria andResendnumIn(List<Integer> values) {
            addCriterion("ReSendNum in", values, "resendnum");
            return (Criteria) this;
        }

        public Criteria andResendnumNotIn(List<Integer> values) {
            addCriterion("ReSendNum not in", values, "resendnum");
            return (Criteria) this;
        }

        public Criteria andResendnumBetween(Integer value1, Integer value2) {
            addCriterion("ReSendNum between", value1, value2, "resendnum");
            return (Criteria) this;
        }

        public Criteria andResendnumNotBetween(Integer value1, Integer value2) {
            addCriterion("ReSendNum not between", value1, value2, "resendnum");
            return (Criteria) this;
        }

        public Criteria andLastmodifytimeIsNull() {
            addCriterion("LastModifyTime is null");
            return (Criteria) this;
        }

        public Criteria andLastmodifytimeIsNotNull() {
            addCriterion("LastModifyTime is not null");
            return (Criteria) this;
        }

        public Criteria andLastmodifytimeEqualTo(Date value) {
            addCriterion("LastModifyTime =", value, "lastmodifytime");
            return (Criteria) this;
        }

        public Criteria andLastmodifytimeNotEqualTo(Date value) {
            addCriterion("LastModifyTime <>", value, "lastmodifytime");
            return (Criteria) this;
        }

        public Criteria andLastmodifytimeGreaterThan(Date value) {
            addCriterion("LastModifyTime >", value, "lastmodifytime");
            return (Criteria) this;
        }

        public Criteria andLastmodifytimeGreaterThanOrEqualTo(Date value) {
            addCriterion("LastModifyTime >=", value, "lastmodifytime");
            return (Criteria) this;
        }

        public Criteria andLastmodifytimeLessThan(Date value) {
            addCriterion("LastModifyTime <", value, "lastmodifytime");
            return (Criteria) this;
        }

        public Criteria andLastmodifytimeLessThanOrEqualTo(Date value) {
            addCriterion("LastModifyTime <=", value, "lastmodifytime");
            return (Criteria) this;
        }

        public Criteria andLastmodifytimeIn(List<Date> values) {
            addCriterion("LastModifyTime in", values, "lastmodifytime");
            return (Criteria) this;
        }

        public Criteria andLastmodifytimeNotIn(List<Date> values) {
            addCriterion("LastModifyTime not in", values, "lastmodifytime");
            return (Criteria) this;
        }

        public Criteria andLastmodifytimeBetween(Date value1, Date value2) {
            addCriterion("LastModifyTime between", value1, value2, "lastmodifytime");
            return (Criteria) this;
        }

        public Criteria andLastmodifytimeNotBetween(Date value1, Date value2) {
            addCriterion("LastModifyTime not between", value1, value2, "lastmodifytime");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("Remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("Remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("Remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("Remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("Remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("Remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("Remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("Remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("Remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("Remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("Remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("Remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("Remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("Remark not between", value1, value2, "remark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table messagenoticerecord
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table messagenoticerecord
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}