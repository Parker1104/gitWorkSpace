package com.hzdongcheng.softwareplatform.intelligentstorage.dal.dao.table.entity;

import java.util.ArrayList;
import java.util.List;

public class MenuRightsEntityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table menurights
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table menurights
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table menurights
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table menurights
     *
     * @mbg.generated
     */
    public MenuRightsEntityExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table menurights
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table menurights
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table menurights
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table menurights
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table menurights
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table menurights
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table menurights
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table menurights
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table menurights
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table menurights
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table menurights
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andMenucodeIsNull() {
            addCriterion("menuCode is null");
            return (Criteria) this;
        }

        public Criteria andMenucodeIsNotNull() {
            addCriterion("menuCode is not null");
            return (Criteria) this;
        }

        public Criteria andMenucodeEqualTo(String value) {
            addCriterion("menuCode =", value, "menucode");
            return (Criteria) this;
        }

        public Criteria andMenucodeNotEqualTo(String value) {
            addCriterion("menuCode <>", value, "menucode");
            return (Criteria) this;
        }

        public Criteria andMenucodeGreaterThan(String value) {
            addCriterion("menuCode >", value, "menucode");
            return (Criteria) this;
        }

        public Criteria andMenucodeGreaterThanOrEqualTo(String value) {
            addCriterion("menuCode >=", value, "menucode");
            return (Criteria) this;
        }

        public Criteria andMenucodeLessThan(String value) {
            addCriterion("menuCode <", value, "menucode");
            return (Criteria) this;
        }

        public Criteria andMenucodeLessThanOrEqualTo(String value) {
            addCriterion("menuCode <=", value, "menucode");
            return (Criteria) this;
        }

        public Criteria andMenucodeLike(String value) {
            addCriterion("menuCode like", value, "menucode");
            return (Criteria) this;
        }

        public Criteria andMenucodeNotLike(String value) {
            addCriterion("menuCode not like", value, "menucode");
            return (Criteria) this;
        }

        public Criteria andMenucodeIn(List<String> values) {
            addCriterion("menuCode in", values, "menucode");
            return (Criteria) this;
        }

        public Criteria andMenucodeNotIn(List<String> values) {
            addCriterion("menuCode not in", values, "menucode");
            return (Criteria) this;
        }

        public Criteria andMenucodeBetween(String value1, String value2) {
            addCriterion("menuCode between", value1, value2, "menucode");
            return (Criteria) this;
        }

        public Criteria andMenucodeNotBetween(String value1, String value2) {
            addCriterion("menuCode not between", value1, value2, "menucode");
            return (Criteria) this;
        }

        public Criteria andRolecodeIsNull() {
            addCriterion("roleCode is null");
            return (Criteria) this;
        }

        public Criteria andRolecodeIsNotNull() {
            addCriterion("roleCode is not null");
            return (Criteria) this;
        }

        public Criteria andRolecodeEqualTo(Integer value) {
            addCriterion("roleCode =", value, "rolecode");
            return (Criteria) this;
        }

        public Criteria andRolecodeNotEqualTo(Integer value) {
            addCriterion("roleCode <>", value, "rolecode");
            return (Criteria) this;
        }

        public Criteria andRolecodeGreaterThan(Integer value) {
            addCriterion("roleCode >", value, "rolecode");
            return (Criteria) this;
        }

        public Criteria andRolecodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("roleCode >=", value, "rolecode");
            return (Criteria) this;
        }

        public Criteria andRolecodeLessThan(Integer value) {
            addCriterion("roleCode <", value, "rolecode");
            return (Criteria) this;
        }

        public Criteria andRolecodeLessThanOrEqualTo(Integer value) {
            addCriterion("roleCode <=", value, "rolecode");
            return (Criteria) this;
        }

        public Criteria andRolecodeIn(List<Integer> values) {
            addCriterion("roleCode in", values, "rolecode");
            return (Criteria) this;
        }

        public Criteria andRolecodeNotIn(List<Integer> values) {
            addCriterion("roleCode not in", values, "rolecode");
            return (Criteria) this;
        }

        public Criteria andRolecodeBetween(Integer value1, Integer value2) {
            addCriterion("roleCode between", value1, value2, "rolecode");
            return (Criteria) this;
        }

        public Criteria andRolecodeNotBetween(Integer value1, Integer value2) {
            addCriterion("roleCode not between", value1, value2, "rolecode");
            return (Criteria) this;
        }

        public Criteria andMenuaccessIsNull() {
            addCriterion("menuAccess is null");
            return (Criteria) this;
        }

        public Criteria andMenuaccessIsNotNull() {
            addCriterion("menuAccess is not null");
            return (Criteria) this;
        }

        public Criteria andMenuaccessEqualTo(String value) {
            addCriterion("menuAccess =", value, "menuaccess");
            return (Criteria) this;
        }

        public Criteria andMenuaccessNotEqualTo(String value) {
            addCriterion("menuAccess <>", value, "menuaccess");
            return (Criteria) this;
        }

        public Criteria andMenuaccessGreaterThan(String value) {
            addCriterion("menuAccess >", value, "menuaccess");
            return (Criteria) this;
        }

        public Criteria andMenuaccessGreaterThanOrEqualTo(String value) {
            addCriterion("menuAccess >=", value, "menuaccess");
            return (Criteria) this;
        }

        public Criteria andMenuaccessLessThan(String value) {
            addCriterion("menuAccess <", value, "menuaccess");
            return (Criteria) this;
        }

        public Criteria andMenuaccessLessThanOrEqualTo(String value) {
            addCriterion("menuAccess <=", value, "menuaccess");
            return (Criteria) this;
        }

        public Criteria andMenuaccessLike(String value) {
            addCriterion("menuAccess like", value, "menuaccess");
            return (Criteria) this;
        }

        public Criteria andMenuaccessNotLike(String value) {
            addCriterion("menuAccess not like", value, "menuaccess");
            return (Criteria) this;
        }

        public Criteria andMenuaccessIn(List<String> values) {
            addCriterion("menuAccess in", values, "menuaccess");
            return (Criteria) this;
        }

        public Criteria andMenuaccessNotIn(List<String> values) {
            addCriterion("menuAccess not in", values, "menuaccess");
            return (Criteria) this;
        }

        public Criteria andMenuaccessBetween(String value1, String value2) {
            addCriterion("menuAccess between", value1, value2, "menuaccess");
            return (Criteria) this;
        }

        public Criteria andMenuaccessNotBetween(String value1, String value2) {
            addCriterion("menuAccess not between", value1, value2, "menuaccess");
            return (Criteria) this;
        }

        public Criteria andMenuoperatorIsNull() {
            addCriterion("menuOperator is null");
            return (Criteria) this;
        }

        public Criteria andMenuoperatorIsNotNull() {
            addCriterion("menuOperator is not null");
            return (Criteria) this;
        }

        public Criteria andMenuoperatorEqualTo(String value) {
            addCriterion("menuOperator =", value, "menuoperator");
            return (Criteria) this;
        }

        public Criteria andMenuoperatorNotEqualTo(String value) {
            addCriterion("menuOperator <>", value, "menuoperator");
            return (Criteria) this;
        }

        public Criteria andMenuoperatorGreaterThan(String value) {
            addCriterion("menuOperator >", value, "menuoperator");
            return (Criteria) this;
        }

        public Criteria andMenuoperatorGreaterThanOrEqualTo(String value) {
            addCriterion("menuOperator >=", value, "menuoperator");
            return (Criteria) this;
        }

        public Criteria andMenuoperatorLessThan(String value) {
            addCriterion("menuOperator <", value, "menuoperator");
            return (Criteria) this;
        }

        public Criteria andMenuoperatorLessThanOrEqualTo(String value) {
            addCriterion("menuOperator <=", value, "menuoperator");
            return (Criteria) this;
        }

        public Criteria andMenuoperatorLike(String value) {
            addCriterion("menuOperator like", value, "menuoperator");
            return (Criteria) this;
        }

        public Criteria andMenuoperatorNotLike(String value) {
            addCriterion("menuOperator not like", value, "menuoperator");
            return (Criteria) this;
        }

        public Criteria andMenuoperatorIn(List<String> values) {
            addCriterion("menuOperator in", values, "menuoperator");
            return (Criteria) this;
        }

        public Criteria andMenuoperatorNotIn(List<String> values) {
            addCriterion("menuOperator not in", values, "menuoperator");
            return (Criteria) this;
        }

        public Criteria andMenuoperatorBetween(String value1, String value2) {
            addCriterion("menuOperator between", value1, value2, "menuoperator");
            return (Criteria) this;
        }

        public Criteria andMenuoperatorNotBetween(String value1, String value2) {
            addCriterion("menuOperator not between", value1, value2, "menuoperator");
            return (Criteria) this;
        }

        public Criteria andMenuauthorizeIsNull() {
            addCriterion("menuAuthorize is null");
            return (Criteria) this;
        }

        public Criteria andMenuauthorizeIsNotNull() {
            addCriterion("menuAuthorize is not null");
            return (Criteria) this;
        }

        public Criteria andMenuauthorizeEqualTo(String value) {
            addCriterion("menuAuthorize =", value, "menuauthorize");
            return (Criteria) this;
        }

        public Criteria andMenuauthorizeNotEqualTo(String value) {
            addCriterion("menuAuthorize <>", value, "menuauthorize");
            return (Criteria) this;
        }

        public Criteria andMenuauthorizeGreaterThan(String value) {
            addCriterion("menuAuthorize >", value, "menuauthorize");
            return (Criteria) this;
        }

        public Criteria andMenuauthorizeGreaterThanOrEqualTo(String value) {
            addCriterion("menuAuthorize >=", value, "menuauthorize");
            return (Criteria) this;
        }

        public Criteria andMenuauthorizeLessThan(String value) {
            addCriterion("menuAuthorize <", value, "menuauthorize");
            return (Criteria) this;
        }

        public Criteria andMenuauthorizeLessThanOrEqualTo(String value) {
            addCriterion("menuAuthorize <=", value, "menuauthorize");
            return (Criteria) this;
        }

        public Criteria andMenuauthorizeLike(String value) {
            addCriterion("menuAuthorize like", value, "menuauthorize");
            return (Criteria) this;
        }

        public Criteria andMenuauthorizeNotLike(String value) {
            addCriterion("menuAuthorize not like", value, "menuauthorize");
            return (Criteria) this;
        }

        public Criteria andMenuauthorizeIn(List<String> values) {
            addCriterion("menuAuthorize in", values, "menuauthorize");
            return (Criteria) this;
        }

        public Criteria andMenuauthorizeNotIn(List<String> values) {
            addCriterion("menuAuthorize not in", values, "menuauthorize");
            return (Criteria) this;
        }

        public Criteria andMenuauthorizeBetween(String value1, String value2) {
            addCriterion("menuAuthorize between", value1, value2, "menuauthorize");
            return (Criteria) this;
        }

        public Criteria andMenuauthorizeNotBetween(String value1, String value2) {
            addCriterion("menuAuthorize not between", value1, value2, "menuauthorize");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table menurights
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table menurights
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}